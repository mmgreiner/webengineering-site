/* Change log
    2016-03-10: Michael: Initial non-responsive version
    2016-03-12: Markus: new folder 1.2 
    2016-03-15: resizing and responsive flex working well.
    
References:
    https://css-tricks.com/snippets/css/a-guide-to-flexbox/
    https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started
    https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes
    
    https://specificity.keegan.st
    http://codeitdown.com/responsive-font-size-css/
    
 
General Flex Design:
The headline always extends the full width.
The four boxes should be on one row as long as max-width is > 400.
IF not, display them in two rows.

For body text, font sizes for body between 14 and 18 px is recommended.
Pic 16px. Line-heigt 1.2 to 1.45em is recommended.


Mandatory definitions for Flexbox container:
display: flex;
flex-direction: row / column
justify-content: space-between;
align-items: 
flex-wrap: 

Optiona for Flexbox items:
flex: 0 1 auto   - flex-grow flex-shrink flex-basis;
   
*/

@import "http://meyerweb.com/eric/tools/css/reset/reset.css";

/******* global settings **********/

body {
	margin: auto;
    background: white;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
	/*font-family: Lato;*/
    font-size: 62.5%;
    line-height: 1.2;
}

/* standard paragraph font size */
p {
    font-size: 1.6em;
}


.h1centered {
	text-align: center;
	font-size: 2.8em;
    padding-bottom: 0.3em;
	/* margin-bottom: 1em; */
}

/* the horizontal lines below the headlines are always relative to the box */
hr {
    outline-width: thick;
    outline-color: red;
    color: aqua;
    width: 60%;
    outline-width: thick;
}

/****** Width flex blox ******/

/* define a class for a flex box that overs the whole width of the screen */
#home, #about {
    display: flex;
    flex-direction: column;
	border-bottom: 0.5px solid gray;
    width: 100vw;
}

/****** Navigation ******/

/* Design:
The top menu is fixed positioned and of a fixed size of 44px. All 5 items reside in one row.

44px is the design recommendation of Apple "rule of thumb" to make a button still
touchable.
This also means that all other divs need an offset from the top of 44px otherwise their top is hidden.

The menu items are left adjusted.
*/

.nav {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100vw;
    margin: 0 auto;
	background-color: black;
    opacity: 0.9;
	position: fixed; 
    min-height: 4.4em;      /* same as padding-top of main divs */
	z-index:100;            /* gives nav a higher priority which makes sure that it is always on top of all the other items*/
}

#about, #portfolio, #blog, #contact {
    padding-top: 4.4em;
}

.nav li{
    margin: 1.0em;
	background-color: none;
}

.nav a{
    /*display: block;
	font-size: 20px;*/
	text-decoration: none;
	color: #fff;
	text-align: center;
    font-size: 1em;
}

.nav img{
    display: block;
    width: 48px;
    margin: auto;
}

/* decrease font for mobile
Width:
iphone6: 360
iPhone6Plus: 411
Galaxy S5: 360
Nexus 5X: 411

*/

/* 500 px is about the size, when the top menue fills up the whole line */
@media screen and (max-width: 500px) {
   .nav a{
        font-size: 16px;
    }    
}

@media screen and (max-width: 400px)
{
    .nav a{
        font-size: 10px;
    }
}

/******** home ***********/

#home {
    height: auto;
}

#home>header {
    width: 100vw;
    /* in the end decided to make this fix, looks the best */
    height: 500px;      
  	background: url(assets/img/header_bg2.jpg) no-repeat top center;
    background-size: cover;
}

/* if the screen gets too small height, change to percentage */
@media screen and (max-height: 600px)
{
    #home>header {
        height: 70vh;
    }
}

/* use h1 to move down the text */
#home h1 {
    padding-top: 25vh;
}

#home p {
    width: 40%; 
    margin: auto;
    position: center;       /* position the box in the middle */
    text-align: center;     /* position the text in the middle of the box */
    /*line-height: 1.5;*/
    color: black;
    font-size: 3.0em;
    text-shadow: 2px 2px white;
}

/* move the text below the eyes of the picture and decrease the size somewhat */
@media screen and (max-height: 500px)
{
    #home h1 {
        padding-top: 20vh;
    }
}

@media screen and (max-width: 500px)
{
    #home p {
        font-size: 2.4em;
    }    
}

/****** about section *********/

/*
Design: 
On desktop, make it fill the whole screen together with the home picture (60vh, 40vh).
On mobile devices, extend below the viewport.
Achieve this using min-height.
*/

#h1about {
	color: #5F7F92;
}

#about
{   
    /* flex container */
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-content: flex-start;
}

#about p {
    padding-left: 6em;
    padding-right: 6em;    
    padding-bottom: 1.6em;
    font-size: 14px;  
    text-align: center;
	color: #555555;
}

/* resize for smaller screens */
@media screen and (max-width: 600px) {
   #about>div p {
       padding-left: 3em;
       padding-right: 3em;
        font-size: 12px;
    }    
}

/******* part designer section **********/

/* parallax: the picture stays when we scroll.
   Adapted from: https://davidwalsh.name/parallax
   background-attahment: fixed is used for this.
 */
 
#partdesigner {
	background: url(assets/img/bg/divider12.png);
    background-attachment : fixed;
    background-position   : top center;
    background-size       : cover;
	color: white;
}

/*Adapted from https://davidwalsh.name/css-vertical-centerv */
#partdesigner, #partcoder  {
    /* flex container */
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-content: flex-start; 
    
    padding-left: 2.8em;
    padding-right: 2.8em;      
    padding-bottom: 2.8em;
	text-align: center;
}

#partdesigner p, #partcoder p {
	font-size: 1.8em;
	/* line-height: 3em; */
	text-shadow: -0.5px 0 black, 0 0.5px black, 0.5px 0 black, 0 -0.5px black;
    padding-bottom: 2.8 em;
}
@media screen and (max-width: 500px)
{
    #partdesigner p, #partcoder p {
        font-size: 1.6em;
    }
}

#partdesigner h1, #partcoder h1 {
	text-shadow: -0.5px 0 black, 0 0.5px black, 0.5px 0 black, 0 -0.5px black;
	margin-top: 1.0em; 
    /* margin-bottom: 0.6em; */
}

/*part coder section*/
#partcoder {
	background-color: black;
	color: white;
    height: auto;
/*	height: 20.0em; */
}

/********* technical skills section **********/

/* display set to flex in order to achieve the fluid grid concept*/
#technicalskills {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: flex-end;
    justify-content: space-around;
    margin-top: 2em;
}

#technicalskills>h1 {
    width: 100%;
}

.bar {
    /* flex item */
    align-self: flex-end;       /* aligns them on buttom */
	width: 160px;
    position: relative;             /* needed to establish anchor for absolute positioning of text inside the bar */
	margin: 30px 20px 30px 20px;
}

/* style of the text inside of the bars
   in order to place the texts (html/css/javascript/wordpress) as well as the according percentage value
   inside the bars the position is set to absolute
   for vertical positioning bottom: 2.5em / 1.5em was used
*/    
.charttextupper {
	text-align: center;
	position: absolute;
	bottom: 2.5em;
	width: 100%;
	color: white;
	font-size: 2.6em;
	opacity: 0.3;
}

.charttextlower {
	text-align: center;
	position: absolute;
	bottom: 1em;
	width: 100%;
	color: white;
	font-size: 1.5em;
}

#barhtml {
	outline: 1px solid #61B3A9;
	height: 28.5em;
	background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #61B3A9), color-stop(1, #B0DBD6));
}

#barcss {
	outline: 1px solid #E1AE9E;
	height: 24.0em;
	background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #E1AE9E), color-stop(1, #F4DCD6));	
}

#barjs {
	outline: 1px solid #DFAE36;
	height: 27.0em;
	background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #DFAE36), color-stop(1, #EFC563));
}

#barwp {
	outline: 1px solid #bc8e5b;
	height: 24.0em;
	background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #bc8e5b), color-stop(1, #dcba83));
}

/****** portfolio (worked on cool stuff) section *******/

/* for screen sizes of 600px and larger the porfolio categories (nav) are shown on single row
   this is overriden by a media query for sizes less than 600px which shows the categories in a single column */
#portfolioCategories {
	text-align: center;
	display: flex;
	flex-direction: row;
	justify-content: center;
	/*text-align: center;*/
	/*justify-content: space-between;*/
}

/* style of the portfolio categories on top of the projects - a kind of navigation for filtering the projects */
.portfolioCat {
	background-color: #808080;
	/*display: inline-block;*/
	width: 120px;
	color: white;
	text-align: center;
	height: 40px;
	vertical-align: middle;
    line-height: 40px;
	margin: 0px 25px 0px 25px;
	font-size: 1.4em;
	/*outline: 1px solid red;*/
}

/* in the portfolio menu the menu item "All" is highlighted with a green background */
#portfolioSelected {
	background-color: #32cd32;
}

/* for max width of 600px all portfolio categories are displayed beyond each other with the help of flex-direction: column
   in addition all items are horizontally aligned in the middle */ 
@media screen and (max-width: 600px) {
	#portfolioCategories {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	
	.portfolioCat {
		margin: 10px 0px 0px 0px;
	}	
}

/* portfolio projects are displayed with flex in order to achieve the fluid grid concept
   at large screen width the projects are shown on one line and while decreasing the window size
   they are shown on multiple lines -> this is achieved by setting flex-wrap: wrap
   in general all projects are horizontally aligned in the middle
*/
#porfolioProjects {
	margin: 20px 0px 0px 0px;
	text-align: center;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: center;
	justify-content: space-around;
	/*justify-content: space-between;*/
}

/* portfolioFigure contains the image and the figcaption with the description
   in order to achieve the positioning of the image and the figcaption 
   (they should be aligned at the bottom and the figcaption should be on top of the img)
   the figure position was set to relative
*/
.portfolioFigure {
	display: inline-block;
	margin: 0px 25px 20px 25px;
    position: relative;
    width: 250px;
    height: 150px;
}

/* in order to show the figcaption on top of the img the position is set to absolute and bottom: 0px*/
.portfolioFigure figcaption{
	width: 250px;
	background-color: #3498db;
	height: 40px;
	/*line-height: 40px;*/
	position: absolute;
	bottom: 0px;
	/*left: -15px;*/
	left: 0px;
	font-size: 12px;
	
	/*animation - the change of height and background takes 1 second */
	/*transition-property: height;
	transition-duration: 1s;*/
	transition: all 1s ease;
}

/* animation 
   on mouse hover over portfolioFigure div the following happens
    - the height of figcaption is changed to 100% 
	- the background of figcaption is becoming a gradient background from blue to red 
	- category is shifted into middle of portfolioFigure div
*/
.portfolioFigure:hover figcaption {
	height: 100%;
	background: linear-gradient(rgba(52, 152, 219, 0), rgba(255, 100, 100, 1));
}

/* the tite of the discription is set to position absolute in order to achieve the wanted positioning inside the figcaption*/
.portfolioFigure h5 {
	color: white;
	position: absolute;
	left: 20px;
	/*top: 15px;*/
	bottom: 15px;
	margin: 0px;
	transition: 1s;
}

.portfolioFigure:hover h5 {
	position: absolute;
	left: 50%;
    bottom: 50%;
	transform: translateX(-50%) translateY(+50%);
	transition: 1s;
}

/* the link to the project is set to position absolute in order to achieve the wanted positioning inside the figcaption*/
.portfolioFigure a {
	color: white;
	background-color: black;
	padding: 5px 10px 5px 10px;
    text-decoration: none;
	position: absolute;
	right: 20px;
	/*top: 10px;*/
	bottom: 10px;
	line-height: 15px;
	height: 15px;
	margin: 0px;
	width: 75px;
	transition: 2s;
}

.portfolioFigure:hover a {
	width: 190px;
	transition-property: width;
	transition-delay: 1s;
	transform: rotateY(360deg);
	transition: 2s;
	/*transform-style: preserve-3d;*/	
}

/* in order to show the image beyond the figcaption the position is set to absolute and bottom: 0px*/
.portfolioFigure img{
	/*width: 220px;*/
	width: 100%;
	height: 150px;
	position: absolute;
	bottom: 0px;
	left: 0px;
}

/*popup part*/

/* Add animation (Chrome, Safari, Opera) */
@-webkit-keyframes example {
    from {top:-100px;opacity: 0;}
    to {top:0px;opacity:1;}
}

/* Add animation (Standard syntax) */
@keyframes example {
    from {top:-100px;opacity: 0;}
    to {top:0px;opacity:1;}
}

/* The modal's background */
.modal {
    display: none;
    position: fixed;
    top:0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(0, 0, 0);
    background-color: rgba(0, 0, 0, 0.8);
    z-index:90;
}

/* Display the modal when targeted */
.modal:target {
    display: table;
}

.modal-dialog {
    display:table-cell;
}

.modal-dialog .modal-content {
    margin: auto;
    background-color: rgb(254, 254, 253);
    position: relative;
    padding: 0;
    outline: 0;
    border: 1px #777 solid;
    text-align: justify;
    width: 32%;
    top:65px;
    border-radius: 4px;
     
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    
    /* Add animation */
    -webkit-animation-name: example; /* Chrome, Safari, Opera */
    -webkit-animation-duration: 0.3s; /* Chrome, Safari, Opera */
    animation-name: example;
    animation-duration: 0.3s;
}

/* The button used to close the modal */
.closebtn {
    text-decoration: none;
    float: right;
    font-size: 2em;
    color: black;
}

.closebtn:hover,
.closebtn:focus {
    color: red;
    text-decoration: none;
    cursor: pointer;
}

.popup-h2{
    color: gray;
    font-size: 150%;
    font-weight: 100;
    margin-left: -0.6em;
}

.container{
    margin-top: 2em;
    margin-bottom: 2em;
    padding-left: 2.2em;
    padding-right: 2.2em;
}

.container img{
    width: 100%;
    position: relative;
    margin-top: -1em;
}

.container p{
    font-size: 1em;
    padding-top: 1em;
    margin-left: -0.6em;
}

/******** blog section **********/

#blog {
	background-color: #F5F5F5;
}

.blogauthor {
	height: 350px;
	width: 120px;
	background-color: #2B2B2B;
	display:inline-block;
	text-align: center;
	color: #FFFFFF;
}

.blogtext {
	height: 350px;
	width: 400px;
	background-color: #FFFFFF;
	display:inline-block;
	vertical-align:top; 
	margin: 0px 0px 10px 0px;
}

/*
Mandatory definitions for Flexbox container:
display: flex;
flex-direction: row / column
justify-content: space-between;
align-items: 
flex-wrap: 

Optiona for Flexbox items:
flex: 0 1 auto   - flex-grow flex-shrink flex-basis;
*/
#blogcontainer {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    flex-wrap: wrap;
}

/* when not enough space to show the two blog entries on one line 
   show all blog items (2 blogs & preview) on separate lines 
   with the help of flex-direction: column
   in addition all blog items should be horizontally centered
   thats achieved with the help of align-items: center;*/
@media screen and (max-width: 1100px) {
    #blogcontainer {
        flex-direction: column;
		align-items: center;
    }
}

.blogitem {
	/* display:inline-block; */
	margin: 0px;
	padding: 0px;
}

.blogauthor {
    width: 100px;
	/* height: 120px; */
	text-align: left;
    padding-left: 10px;
/*	padding: 0px 0px 0px 10px; */
}
    
.blogauthor img {
	margin: 15px 0px 0px 0px;
}

.blogauthor h4 {
	font-size: 15px;
	margin: 10px 0px 0px 0px;
}

.blogauthor h5 {
	font-size: 10px;
	margin: 10px 0px 0px 0px;
}

.blogtext h2 {
	font-size: 20px;
	margin: 20px 0px 20px 10px;
}

.blogtext p {
	font-size: 14px;
	margin: 20px 0px 20px 10px;
	line-height: 20px;
}

.blogtext a {
	color: #2e80d0;
	text-decoration: none;
}

#blogpreviews {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/* when not enough space to show the blog previews on the same row
   they are displayed on a new row 
   in this case they should be displayed all on one row -> flex-direction: row*/
@media screen and (max-width: 1250px) {
    #blogpreviews {
        flex-direction: row;
    }
}

.blogpreview {
	background-color: #2B2B2B;
	width: 150px;
	margin: 0px 0px 10px 10px;
	height: 100px;
	position: relative;
}

/* in case of a screen smaller than 550px the div with the author information 
   should be placed on top of the blog text
   this means that we have to change the width and the positioning of the inner items (picture, authorinfo)*/
@media screen and (max-width: 550px) {
	.blogauthor {
		width: 390px;
		height: 120px;
		padding: 0px 0px 0px 10px;
	}
	
	.blogauthor img {
		margin: 5px 0px 0px 0px;
	}

	.blogauthor h4 {
		font-size: 15px;
		margin: 5px 0px 0px 0px;
	}

	.blogauthor h5 {
		font-size: 10px;
		margin: 5px 0px 0px 0px;
	}	
	
	#blogcontainer {
		margin: 0vw 10vw 0vw 10vw;
	}
}

.blogpreview p {
	font-size: 13px;
	line-height: 13px;
	padding: 20px 0px 0px 10px;
	color: #FFFFFF;
}

.blogpreview p:nth-child(2n) {
	font-size: 11px;
	line-height: 11px;
	padding: 10px 0px 0px 10px;
}

.blogpreviewdate {
	font-size: 5px;
}

.blogpreview a {
	font-size: 12px;
	color: #2e80d0;
	text-decoration: none;
	position: absolute;
	bottom: 5px;
}

/* for screens with less width than 450px we make divs of flexible width to avoid horizontal scrolling
   in addition the height is set to auto in order to avoid text-overflow */
@media screen and (max-width: 450px) {
	.blogauthor {
		width: 80vw;
		padding: 0px 0px 0px 10px;
		height: auto;
	}
	.blogtext {
		width: 80vw;
		padding: 0px 0px 0px 10px;
		height: auto;
	}
}

/* blogpreviews are hidden for very small screens
   display: none helps to avoid that the div still needs space even it is not visible
   visibility: hidden leads to this problem (hides div but space still needed)*/
@media screen and (max-width: 480px) {
	#blogpreviews {
		display: none;
	}
}

/******** crafted section **********/

/* section with background picture 
   background image scale to screen size and is displayed at 100% width
   display table is needed to center inner div vertically and horizontally */
#crafted {
    display: table;
    height: 35vw;
	width: 100vw;
    background: url(assets/img/bg/divider661.jpg) no-repeat top center ;
	background-size: 100% auto;
    display: table-cell;
    vertical-align: middle;
    text-align: center;
    color: white;
}

/* div inside section which contains the title and the text 
   was introduced for vertical and horizontal alignment -> with the help of display: table-cell
   vertical-align is center
   horizontal-align is center */
/*#crafted  {*/
/*	*/
/*}*/

/* title with shadow to make it readable on relatively dark background */
#crafted h1 {
	text-shadow: -0.5px 0 black, 0 0.5px black, 0.5px 0 black, 0 -0.5px black;
}

/* text with override for font-size and line-height in comparison to standard text settings */
#crafted p {
    font-size: 2em;
	line-height: 2;
}

/* for screen width less than 500px size of the title and text is changed 
   in order to avoid overflow of the background image */
@media screen and (max-width: 500px) {
	#crafted p {
        font-size: 1.2em;
    }    
	#crafted h1 {
		font-size: 2.2em;
	}
}

/******** contact section **********/

/* section with contact information
   all text elements should be aligned left */
#contact {
	text-align: left;
}

/* id contactInner
   flex-wrap: wrap -> for splitting up divs onto multiple lines if not enough space
   justify-content: center -> for centering the divs */
#contactInner {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: center;
	padding: 0px 0px 0px 50px;
	
	/*justify-content: flex-start;*/
	/*justify-content: space-between;*/
}

/* divs for contact information have a fixed size and some margin */
.contact {
	width: 350px;
	margin: 40px 10px 40px 10px;
}

/* style for titles */
.contact h3 {
	font-size: 2em;
	margin: 0px 0px 15px 0px;
}

/* style for links */
.contact a {
	line-height: 18px;
	color: #4db1ea;
	text-decoration: none;
}

/* style for contactform */
#contactform {
	margin: 20px 0px 0px 0px;
}

/*style of input boxes*/
#contactform input {
	margin: 20px 0px 0px 0px;
	width: 150px;
<<<<<<< Updated upstream
	font-size: 16px;
}

/*style of submit button*/
#contactform button {
	margin: 15px 0px 0px 0px;
	font-size: 16px;
=======
    font-size: 16px;
}

#contactform button {
    font-size: 16px;
>>>>>>> Stashed changes
}

/* for screen width smaller than 300px the width of the divs are scaled to the viewport */
@media screen and (max-width: 400px) {
	#contactInner {
		width: 80vw;
		margin: 0vw 10vw 0vw 10vw;
		padding: 0px;
	}
	
	.contact {
		margin: 20px 0px 20x 0px;
	}
	
	.contact h3 {
		font-size: 1.6em;
	}

	.contact a {
		font-size: 1.2em;
	}
	
	.contact p {
		font-size: 1.2em;
	}
	
	#contactform input {
		font-size: 1.2em;
	}

	#contactform button {
		font-size: 1.2em;
	}
}

/******** footer **********/

/*footer has a fixed hight of 100px
  the width is adjusted to the screen width
  in order to achieve vertical centering of the text the line-height is set to the height of the footer
  in order to achieve horizontal centering the text-align is set to center*/
#footer {
	background-color: #2b2b2b;
	height: 120px;
	text-align: center;
	font-size: 20px;
	line-height: 100px;
}

#footer h4 {
	color: white;
}

#footer a {
	color: #2e80d0;
	text-decoration: none;
}

/*added this to resize the titles if screen with is very small*/
@media screen and (max-width: 400px) {
	.h1centered {
		font-size: 2.2em;
	}
}


/*********** animation *************/

@keyframes slideLeft {
    0% {
        margin-left: 100%;
        width: 300%;
    }
    95% {
        margin-left: -10%;
        width: 100%;
    }
    100% {
        margin-left: 0%;
        width: 100%;
    }
}

@keyframes slideRight {
    0% {
        margin-right: 100%;
        width: 300%;
    }
    95% {
        margin-right: -10%;
        width: 100%;
    }
    100% {
        margin-right: 0%;
        width: 100%;
    }
}

@keyframes slideDown {
	0% {
		transform: translateY(-100%);
	}
	50%{
		transform: translateY(8%);
	}
	65%{
		transform: translateY(-4%);
	}
	80%{
		transform: translateY(4%);
	}
	95%{
		transform: translateY(-2%);
	}			
	100% {
		transform: translateY(0%);
	}		
}

@keyframes slideUp {
	0% {
		transform: translateY(100%);
	}
	50%{
		transform: translateY(-8%);
	}
	65%{
		transform: translateY(4%);
	}
	80%{
		transform: translateY(-4%);
	}
	95%{
		transform: translateY(2%);
	}			
	100% {
		transform: translateY(0%);
	}	
}


.slide {
    visibility: visible;
    animation-duration: 4s;
    animation-name: slideLeft;
}

.slide1 {
    visibility: visible;
    animation-duration: 4s;
    animation-name: slideLeft;
}

.slide2 {
    visibility: visible;
    animation-duration: 4s;
    animation-name: slideRight;
}

.slide3 {
    visibility: visible;
    animation-duration: 4s;
    animation-name: slideUp;
}

.slide4 {
    visibility: visible;
    animation-duration: 4s;
    animation-name: slideDown;
}

.animate {
    visibility: visible;
}


/*********** end animation *********/
